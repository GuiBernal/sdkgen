// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser handles 'any' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "any",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "any",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'base64' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "base64",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "base64",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'bool' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "bool",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "bool",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'bytes' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "bytes",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "bytes",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cep' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "cep",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "cep",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cnpj' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "cnpj",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "cnpj",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cpf' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "cpf",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "cpf",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'date' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "date",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "date",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'datetime' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "datetime",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "datetime",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'email' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "email",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "email",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'enum' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "enum",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "enum",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'error' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "error",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "error",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'false' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "false",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "false",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'float' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "float",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "float",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'fn' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "fn",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "fn",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'function' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "function",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "function",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'get' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "get",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "get",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'hex' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "hex",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "hex",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'import' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "import",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "import",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'int' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "int",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "int",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'latlng' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "latlng",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "latlng",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'money' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "money",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "money",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'phone' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "phone",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "phone",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'safehtml' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "safehtml",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "safehtml",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'string' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "string",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "string",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'true' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "true",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "true",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'type' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "type",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "type",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'uint' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "uint",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "uint",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'url' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "url",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "url",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'uuid' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "uuid",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "uuid",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'void' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "void",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "void",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'xml' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "xml",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "xml",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles arrays and optionals 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "aa",
          "secret": false,
          "type": Object {
            "base": Object {
              "kind": "StringPrimitiveType",
            },
            "kind": "ArrayType",
          },
        },
        Field {
          "kind": "Field",
          "name": "bbb",
          "secret": false,
          "type": Object {
            "base": Object {
              "base": Object {
                "base": Object {
                  "base": Object {
                    "kind": "IntPrimitiveType",
                  },
                  "kind": "OptionalType",
                },
                "kind": "ArrayType",
              },
              "kind": "OptionalType",
            },
            "kind": "OptionalType",
          },
        },
        Field {
          "kind": "Field",
          "name": "cccc",
          "secret": false,
          "type": Object {
            "base": Object {
              "base": Object {
                "base": Object {
                  "kind": "IntPrimitiveType",
                },
                "kind": "ArrayType",
              },
              "kind": "ArrayType",
            },
            "kind": "ArrayType",
          },
        },
        Field {
          "kind": "Field",
          "name": "ddddd",
          "secret": false,
          "type": Object {
            "base": Object {
              "base": Object {
                "base": Object {
                  "base": Object {
                    "base": Object {
                      "base": Object {
                        "base": Object {
                          "base": Object {
                            "base": Object {
                              "base": Object {
                                "base": Object {
                                  "kind": "UIntPrimitiveType",
                                },
                                "kind": "ArrayType",
                              },
                              "kind": "ArrayType",
                            },
                            "kind": "ArrayType",
                          },
                          "kind": "OptionalType",
                        },
                        "kind": "OptionalType",
                      },
                      "kind": "ArrayType",
                    },
                    "kind": "OptionalType",
                  },
                  "kind": "OptionalType",
                },
                "kind": "OptionalType",
              },
              "kind": "ArrayType",
            },
            "kind": "ArrayType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "aa",
            "secret": false,
            "type": Object {
              "base": Object {
                "kind": "StringPrimitiveType",
              },
              "kind": "ArrayType",
            },
          },
          Field {
            "kind": "Field",
            "name": "bbb",
            "secret": false,
            "type": Object {
              "base": Object {
                "base": Object {
                  "base": Object {
                    "base": Object {
                      "kind": "IntPrimitiveType",
                    },
                    "kind": "OptionalType",
                  },
                  "kind": "ArrayType",
                },
                "kind": "OptionalType",
              },
              "kind": "OptionalType",
            },
          },
          Field {
            "kind": "Field",
            "name": "cccc",
            "secret": false,
            "type": Object {
              "base": Object {
                "base": Object {
                  "base": Object {
                    "kind": "IntPrimitiveType",
                  },
                  "kind": "ArrayType",
                },
                "kind": "ArrayType",
              },
              "kind": "ArrayType",
            },
          },
          Field {
            "kind": "Field",
            "name": "ddddd",
            "secret": false,
            "type": Object {
              "base": Object {
                "base": Object {
                  "base": Object {
                    "base": Object {
                      "base": Object {
                        "base": Object {
                          "base": Object {
                            "base": Object {
                              "base": Object {
                                "base": Object {
                                  "base": Object {
                                    "kind": "UIntPrimitiveType",
                                  },
                                  "kind": "ArrayType",
                                },
                                "kind": "ArrayType",
                              },
                              "kind": "ArrayType",
                            },
                            "kind": "OptionalType",
                          },
                          "kind": "OptionalType",
                        },
                        "kind": "ArrayType",
                      },
                      "kind": "OptionalType",
                    },
                    "kind": "OptionalType",
                  },
                  "kind": "OptionalType",
                },
                "kind": "ArrayType",
              },
              "kind": "ArrayType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles combinations of all part 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Foo",
        "Bar",
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Foo",
    "Bar",
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "kind": "TypeReference",
        "type": Object {
          "fields": Array [
            Field {
              "kind": "Field",
              "name": "a",
              "secret": false,
              "type": Object {
                "base": Object {
                  "kind": "StringPrimitiveType",
                },
                "kind": "OptionalType",
              },
            },
            Field {
              "kind": "Field",
              "name": "b",
              "secret": false,
              "type": Object {
                "kind": "IntPrimitiveType",
              },
            },
          ],
          "kind": "StructType",
          "spreads": Array [],
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "api.cubos.io/sdkgenspec",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "a",
          "secret": false,
          "type": Object {
            "base": Object {
              "kind": "StringPrimitiveType",
            },
            "kind": "OptionalType",
          },
        },
        Field {
          "kind": "Field",
          "name": "b",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Baz",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "a",
            "secret": false,
            "type": Object {
              "base": Object {
                "kind": "StringPrimitiveType",
              },
              "kind": "OptionalType",
            },
          },
          Field {
            "kind": "Field",
            "name": "b",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Foo",
          "Bar",
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles errors 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Foo",
        "Bar",
        "FooBar",
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Foo",
    "Bar",
    "FooBar",
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Foo",
          "Bar",
          "FooBar",
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles functions with arguments 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
        Field {
          "kind": "Field",
          "name": "bar",
          "secret": false,
          "type": Object {
            "kind": "TypeReference",
            "type": Object {
              "fields": Array [
                Field {
                  "kind": "Field",
                  "name": "aa",
                  "secret": false,
                  "type": Object {
                    "kind": "StringPrimitiveType",
                  },
                },
              ],
              "kind": "StructType",
              "spreads": Array [],
            },
          },
        },
      ],
      "kind": "FunctionOperation",
      "name": "doIt",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "aa",
          "secret": false,
          "type": Object {
            "kind": "StringPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Bar",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "aa",
            "secret": false,
            "type": Object {
              "kind": "StringPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles options on the top 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "api.cubos.io/sdkgenspec",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'any' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "AnyPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "AnyPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'base64' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "Base64PrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "Base64PrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'bool' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "BoolPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "BoolPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'bytes' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "BytesPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "BytesPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cep' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "CepPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "CepPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cnpj' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "CnpjPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "CnpjPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cpf' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "CpfPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "CpfPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'date' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "DatePrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "DatePrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'datetime' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "DateTimePrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "DateTimePrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'email' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "EmailPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "EmailPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'float' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "FloatPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "FloatPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'hex' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "HexPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "HexPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'int' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'latlng' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "LatLngPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "LatLngPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'money' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "MoneyPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "MoneyPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'phone' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "PhonePrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "PhonePrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'safehtml' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "SafeHtmlPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "SafeHtmlPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'string' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "StringPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "StringPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'uint' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "UIntPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "UIntPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'url' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "UrlPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "UrlPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'uuid' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "UuidPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "UuidPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'void' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "VoidPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "VoidPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'xml' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "foo",
          "secret": false,
          "type": Object {
            "kind": "XmlPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "foo",
            "secret": false,
            "type": Object {
              "kind": "XmlPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'any' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "AnyPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "AnyPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "AnyPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'base64' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "Base64PrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "Base64PrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "Base64PrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'bool' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "isFoo",
      "returnType": Object {
        "kind": "BoolPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "BoolPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "BoolPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'bytes' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "BytesPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "BytesPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "BytesPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cep' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "CepPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "CepPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "CepPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cnpj' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "CnpjPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "CnpjPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "CnpjPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cpf' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "CpfPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "CpfPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "CpfPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'date' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "DatePrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "DatePrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "DatePrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'datetime' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "DateTimePrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "DateTimePrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "DateTimePrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'email' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "EmailPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "EmailPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "EmailPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'float' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "FloatPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "FloatPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "FloatPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'hex' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "HexPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "HexPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "HexPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'int' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "IntPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "IntPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "IntPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'latlng' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "LatLngPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "LatLngPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "LatLngPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'money' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "MoneyPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "MoneyPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "MoneyPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'phone' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "PhonePrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "PhonePrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "PhonePrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'safehtml' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "SafeHtmlPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "SafeHtmlPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "SafeHtmlPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'string' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "StringPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "StringPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'uint' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "UIntPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "UIntPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "UIntPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'url' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "UrlPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "UrlPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "UrlPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'uuid' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "UuidPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "UuidPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "UuidPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'void' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "VoidPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "VoidPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "VoidPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'xml' 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "foo",
      "returnType": Object {
        "kind": "XmlPrimitiveType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "bar",
      "returnType": Object {
        "base": Object {
          "kind": "XmlPrimitiveType",
        },
        "kind": "OptionalType",
      },
    },
    GetOperation {
      "args": Array [],
      "kind": "GetOperation",
      "name": "baz",
      "returnType": Object {
        "base": Object {
          "kind": "XmlPrimitiveType",
        },
        "kind": "ArrayType",
      },
    },
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles spreads in structs 1`] = `
AstRoot {
  "enumTypes": Array [
    Object {
      "kind": "EnumType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "kind": "FunctionOperation",
      "name": "ping",
      "returnType": Object {
        "kind": "StringPrimitiveType",
      },
    },
  ],
  "options": Options {
    "kind": "Options",
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "aa",
          "secret": false,
          "type": Object {
            "kind": "StringPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [],
    },
    Object {
      "fields": Array [
        Field {
          "kind": "Field",
          "name": "bb",
          "secret": false,
          "type": Object {
            "kind": "IntPrimitiveType",
          },
        },
        Field {
          "kind": "Field",
          "name": "aa",
          "secret": false,
          "type": Object {
            "kind": "StringPrimitiveType",
          },
        },
      ],
      "kind": "StructType",
      "spreads": Array [
        Object {
          "kind": "TypeReference",
          "type": Object {
            "fields": Array [
              Field {
                "kind": "Field",
                "name": "aa",
                "secret": false,
                "type": Object {
                  "kind": "StringPrimitiveType",
                },
              },
            ],
            "kind": "StructType",
            "spreads": Array [],
          },
        },
      ],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Bar",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "aa",
            "secret": false,
            "type": Object {
              "kind": "StringPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "Foo",
      "type": Object {
        "fields": Array [
          Field {
            "kind": "Field",
            "name": "bb",
            "secret": false,
            "type": Object {
              "kind": "IntPrimitiveType",
            },
          },
          Field {
            "kind": "Field",
            "name": "aa",
            "secret": false,
            "type": Object {
              "kind": "StringPrimitiveType",
            },
          },
        ],
        "kind": "StructType",
        "spreads": Array [
          Object {
            "kind": "TypeReference",
            "type": Object {
              "fields": Array [
                Field {
                  "kind": "Field",
                  "name": "aa",
                  "secret": false,
                  "type": Object {
                    "kind": "StringPrimitiveType",
                  },
                },
              ],
              "kind": "StructType",
              "spreads": Array [],
            },
          },
        ],
      },
    },
    TypeDefinition {
      "kind": "TypeDefinition",
      "name": "ErrorType",
      "type": Object {
        "kind": "EnumType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;
