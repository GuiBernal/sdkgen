// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser handles 'any' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "any",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "any",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'base64' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "base64",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "base64",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'bool' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "bool",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "bool",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'bytes' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "bytes",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "bytes",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cep' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "cep",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "cep",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cnpj' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "cnpj",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "cnpj",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'cpf' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "cpf",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "cpf",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'date' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "date",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "date",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'datetime' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "datetime",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "datetime",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'email' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "email",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "email",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'enum' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "enum",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "enum",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'error' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "error",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "error",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'false' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "false",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "false",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'float' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "float",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "float",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'function' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "function",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "function",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'get' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "get",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "get",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'hex' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "hex",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "hex",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'import' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "import",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "import",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'int' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "int",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "int",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'latlng' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "latlng",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "latlng",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'money' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "money",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "money",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'phone' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "phone",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "phone",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'safehtml' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "safehtml",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "safehtml",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'string' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "string",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "string",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'true' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "true",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "true",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'type' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "type",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "type",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'uint' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "uint",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "uint",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'url' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "url",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "url",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'uuid' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "uuid",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "uuid",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'void' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "void",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "void",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles 'xml' on the name of a field 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "xml",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "xml",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles arrays and optionals 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "aa",
          "secret": false,
          "type": ArrayType {
            "base": StringPrimitiveType {
              "name": "string",
            },
          },
        },
        Field {
          "name": "bbb",
          "secret": false,
          "type": OptionalType {
            "base": OptionalType {
              "base": ArrayType {
                "base": OptionalType {
                  "base": IntPrimitiveType {
                    "name": "int",
                  },
                },
              },
            },
          },
        },
        Field {
          "name": "cccc",
          "secret": false,
          "type": ArrayType {
            "base": ArrayType {
              "base": ArrayType {
                "base": IntPrimitiveType {
                  "name": "int",
                },
              },
            },
          },
        },
        Field {
          "name": "ddddd",
          "secret": false,
          "type": ArrayType {
            "base": ArrayType {
              "base": OptionalType {
                "base": OptionalType {
                  "base": OptionalType {
                    "base": ArrayType {
                      "base": OptionalType {
                        "base": OptionalType {
                          "base": ArrayType {
                            "base": ArrayType {
                              "base": ArrayType {
                                "base": UIntPrimitiveType {
                                  "name": "uint",
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "aa",
            "secret": false,
            "type": ArrayType {
              "base": StringPrimitiveType {
                "name": "string",
              },
            },
          },
          Field {
            "name": "bbb",
            "secret": false,
            "type": OptionalType {
              "base": OptionalType {
                "base": ArrayType {
                  "base": OptionalType {
                    "base": IntPrimitiveType {
                      "name": "int",
                    },
                  },
                },
              },
            },
          },
          Field {
            "name": "cccc",
            "secret": false,
            "type": ArrayType {
              "base": ArrayType {
                "base": ArrayType {
                  "base": IntPrimitiveType {
                    "name": "int",
                  },
                },
              },
            },
          },
          Field {
            "name": "ddddd",
            "secret": false,
            "type": ArrayType {
              "base": ArrayType {
                "base": OptionalType {
                  "base": OptionalType {
                    "base": OptionalType {
                      "base": ArrayType {
                        "base": OptionalType {
                          "base": OptionalType {
                            "base": ArrayType {
                              "base": ArrayType {
                                "base": ArrayType {
                                  "base": UIntPrimitiveType {
                                    "name": "uint",
                                  },
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles combinations of all part 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Foo",
        "Bar",
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Foo",
    "Bar",
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": TypeReference {
        "name": "Baz",
        "type": StructType {
          "fields": Array [
            Field {
              "name": "a",
              "secret": false,
              "type": OptionalType {
                "base": StringPrimitiveType {
                  "name": "string",
                },
              },
            },
            Field {
              "name": "b",
              "secret": false,
              "type": IntPrimitiveType {
                "name": "int",
              },
            },
          ],
          "name": "Baz",
          "spreads": Array [],
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "api.cubos.io/sdkgenspec",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "a",
          "secret": false,
          "type": OptionalType {
            "base": StringPrimitiveType {
              "name": "string",
            },
          },
        },
        Field {
          "name": "b",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Baz",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Baz",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "a",
            "secret": false,
            "type": OptionalType {
              "base": StringPrimitiveType {
                "name": "string",
              },
            },
          },
          Field {
            "name": "b",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Baz",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Foo",
          "Bar",
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles errors 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Foo",
        "Bar",
        "FooBar",
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Foo",
    "Bar",
    "FooBar",
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Foo",
          "Bar",
          "FooBar",
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles functions with arguments 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
        Field {
          "name": "bar",
          "secret": false,
          "type": TypeReference {
            "name": "Bar",
            "type": StructType {
              "fields": Array [
                Field {
                  "name": "aa",
                  "secret": false,
                  "type": StringPrimitiveType {
                    "name": "string",
                  },
                },
              ],
              "name": "Bar",
              "spreads": Array [],
            },
          },
        },
      ],
      "name": "doIt",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "aa",
          "secret": false,
          "type": StringPrimitiveType {
            "name": "string",
          },
        },
      ],
      "name": "Bar",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Bar",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "aa",
            "secret": false,
            "type": StringPrimitiveType {
              "name": "string",
            },
          },
        ],
        "name": "Bar",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles options on the top 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "api.cubos.io/sdkgenspec",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'any' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": AnyPrimitiveType {
            "name": "any",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": AnyPrimitiveType {
              "name": "any",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'base64' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": Base64PrimitiveType {
            "name": "base64",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": Base64PrimitiveType {
              "name": "base64",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'bool' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": BoolPrimitiveType {
            "name": "bool",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": BoolPrimitiveType {
              "name": "bool",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'bytes' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": BytesPrimitiveType {
            "name": "bytes",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": BytesPrimitiveType {
              "name": "bytes",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cep' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": CepPrimitiveType {
            "name": "cep",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": CepPrimitiveType {
              "name": "cep",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cnpj' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": CnpjPrimitiveType {
            "name": "cnpj",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": CnpjPrimitiveType {
              "name": "cnpj",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'cpf' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": CpfPrimitiveType {
            "name": "cpf",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": CpfPrimitiveType {
              "name": "cpf",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'date' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": DatePrimitiveType {
            "name": "date",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": DatePrimitiveType {
              "name": "date",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'datetime' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": DateTimePrimitiveType {
            "name": "datetime",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": DateTimePrimitiveType {
              "name": "datetime",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'email' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": EmailPrimitiveType {
            "name": "email",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": EmailPrimitiveType {
              "name": "email",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'float' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": FloatPrimitiveType {
            "name": "float",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": FloatPrimitiveType {
              "name": "float",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'hex' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": HexPrimitiveType {
            "name": "hex",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": HexPrimitiveType {
              "name": "hex",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'int' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'latlng' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": LatLngPrimitiveType {
            "name": "latlng",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": LatLngPrimitiveType {
              "name": "latlng",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'money' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": MoneyPrimitiveType {
            "name": "money",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": MoneyPrimitiveType {
              "name": "money",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'phone' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": PhonePrimitiveType {
            "name": "phone",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": PhonePrimitiveType {
              "name": "phone",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'safehtml' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": SafeHtmlPrimitiveType {
            "name": "safehtml",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": SafeHtmlPrimitiveType {
              "name": "safehtml",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'string' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": StringPrimitiveType {
            "name": "string",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": StringPrimitiveType {
              "name": "string",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'uint' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": UIntPrimitiveType {
            "name": "uint",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": UIntPrimitiveType {
              "name": "uint",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'url' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": UrlPrimitiveType {
            "name": "url",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": UrlPrimitiveType {
              "name": "url",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'uuid' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": UuidPrimitiveType {
            "name": "uuid",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": UuidPrimitiveType {
              "name": "uuid",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'void' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": VoidPrimitiveType {
            "name": "void",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": VoidPrimitiveType {
              "name": "void",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles primitive type 'xml' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "foo",
          "secret": false,
          "type": XmlPrimitiveType {
            "name": "xml",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "foo",
            "secret": false,
            "type": XmlPrimitiveType {
              "name": "xml",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'any' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": AnyPrimitiveType {
        "name": "any",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": AnyPrimitiveType {
          "name": "any",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": AnyPrimitiveType {
          "name": "any",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'base64' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": Base64PrimitiveType {
        "name": "base64",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": Base64PrimitiveType {
          "name": "base64",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": Base64PrimitiveType {
          "name": "base64",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'bool' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "isFoo",
      "returnType": BoolPrimitiveType {
        "name": "bool",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": BoolPrimitiveType {
          "name": "bool",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": BoolPrimitiveType {
          "name": "bool",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'bytes' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": BytesPrimitiveType {
        "name": "bytes",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": BytesPrimitiveType {
          "name": "bytes",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": BytesPrimitiveType {
          "name": "bytes",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cep' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": CepPrimitiveType {
        "name": "cep",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": CepPrimitiveType {
          "name": "cep",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": CepPrimitiveType {
          "name": "cep",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cnpj' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": CnpjPrimitiveType {
        "name": "cnpj",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": CnpjPrimitiveType {
          "name": "cnpj",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": CnpjPrimitiveType {
          "name": "cnpj",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'cpf' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": CpfPrimitiveType {
        "name": "cpf",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": CpfPrimitiveType {
          "name": "cpf",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": CpfPrimitiveType {
          "name": "cpf",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'date' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": DatePrimitiveType {
        "name": "date",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": DatePrimitiveType {
          "name": "date",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": DatePrimitiveType {
          "name": "date",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'datetime' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": DateTimePrimitiveType {
        "name": "datetime",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": DateTimePrimitiveType {
          "name": "datetime",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": DateTimePrimitiveType {
          "name": "datetime",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'email' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": EmailPrimitiveType {
        "name": "email",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": EmailPrimitiveType {
          "name": "email",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": EmailPrimitiveType {
          "name": "email",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'float' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": FloatPrimitiveType {
        "name": "float",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": FloatPrimitiveType {
          "name": "float",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": FloatPrimitiveType {
          "name": "float",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'hex' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": HexPrimitiveType {
        "name": "hex",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": HexPrimitiveType {
          "name": "hex",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": HexPrimitiveType {
          "name": "hex",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'int' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": IntPrimitiveType {
        "name": "int",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": IntPrimitiveType {
          "name": "int",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": IntPrimitiveType {
          "name": "int",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'latlng' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": LatLngPrimitiveType {
        "name": "latlng",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": LatLngPrimitiveType {
          "name": "latlng",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": LatLngPrimitiveType {
          "name": "latlng",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'money' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": MoneyPrimitiveType {
        "name": "money",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": MoneyPrimitiveType {
          "name": "money",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": MoneyPrimitiveType {
          "name": "money",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'phone' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": PhonePrimitiveType {
        "name": "phone",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": PhonePrimitiveType {
          "name": "phone",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": PhonePrimitiveType {
          "name": "phone",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'safehtml' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": SafeHtmlPrimitiveType {
        "name": "safehtml",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": SafeHtmlPrimitiveType {
          "name": "safehtml",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": SafeHtmlPrimitiveType {
          "name": "safehtml",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'string' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": StringPrimitiveType {
          "name": "string",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": StringPrimitiveType {
          "name": "string",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'uint' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": UIntPrimitiveType {
        "name": "uint",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": UIntPrimitiveType {
          "name": "uint",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": UIntPrimitiveType {
          "name": "uint",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'url' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": UrlPrimitiveType {
        "name": "url",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": UrlPrimitiveType {
          "name": "url",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": UrlPrimitiveType {
          "name": "url",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'uuid' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": UuidPrimitiveType {
        "name": "uuid",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": UuidPrimitiveType {
          "name": "uuid",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": UuidPrimitiveType {
          "name": "uuid",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'void' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": VoidPrimitiveType {
        "name": "void",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": VoidPrimitiveType {
          "name": "void",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": VoidPrimitiveType {
          "name": "void",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles simple get operations for primitive type 'xml' 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    GetOperation {
      "args": Array [],
      "name": "foo",
      "returnType": XmlPrimitiveType {
        "name": "xml",
      },
    },
    GetOperation {
      "args": Array [],
      "name": "bar",
      "returnType": OptionalType {
        "base": XmlPrimitiveType {
          "name": "xml",
        },
      },
    },
    GetOperation {
      "args": Array [],
      "name": "baz",
      "returnType": ArrayType {
        "base": XmlPrimitiveType {
          "name": "xml",
        },
      },
    },
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;

exports[`Parser handles spreads in structs 1`] = `
AstRoot {
  "enumTypes": Array [
    EnumType {
      "name": "ErrorType",
      "values": Array [
        "Fatal",
        "Connection",
      ],
    },
  ],
  "errors": Array [
    "Fatal",
    "Connection",
  ],
  "operations": Array [
    FunctionOperation {
      "args": Array [],
      "name": "ping",
      "returnType": StringPrimitiveType {
        "name": "string",
      },
    },
  ],
  "options": Options {
    "retryRequest": true,
    "strict": false,
    "syntheticDefaultImports": true,
    "url": "",
    "useRethink": true,
  },
  "structTypes": Array [
    StructType {
      "fields": Array [
        Field {
          "name": "aa",
          "secret": false,
          "type": StringPrimitiveType {
            "name": "string",
          },
        },
      ],
      "name": "Bar",
      "spreads": Array [],
    },
    StructType {
      "fields": Array [
        Field {
          "name": "bb",
          "secret": false,
          "type": IntPrimitiveType {
            "name": "int",
          },
        },
        Field {
          "name": "aa",
          "secret": false,
          "type": StringPrimitiveType {
            "name": "string",
          },
        },
      ],
      "name": "Foo",
      "spreads": Array [
        TypeReference {
          "name": "Bar",
          "type": StructType {
            "fields": Array [
              Field {
                "name": "aa",
                "secret": false,
                "type": StringPrimitiveType {
                  "name": "string",
                },
              },
            ],
            "name": "Bar",
            "spreads": Array [],
          },
        },
      ],
    },
  ],
  "typeDefinitions": Array [
    TypeDefinition {
      "name": "Bar",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "aa",
            "secret": false,
            "type": StringPrimitiveType {
              "name": "string",
            },
          },
        ],
        "name": "Bar",
        "spreads": Array [],
      },
    },
    TypeDefinition {
      "name": "Foo",
      "type": StructType {
        "fields": Array [
          Field {
            "name": "bb",
            "secret": false,
            "type": IntPrimitiveType {
              "name": "int",
            },
          },
          Field {
            "name": "aa",
            "secret": false,
            "type": StringPrimitiveType {
              "name": "string",
            },
          },
        ],
        "name": "Foo",
        "spreads": Array [
          TypeReference {
            "name": "Bar",
            "type": StructType {
              "fields": Array [
                Field {
                  "name": "aa",
                  "secret": false,
                  "type": StringPrimitiveType {
                    "name": "string",
                  },
                },
              ],
              "name": "Bar",
              "spreads": Array [],
            },
          },
        ],
      },
    },
    TypeDefinition {
      "name": "ErrorType",
      "type": EnumType {
        "name": "ErrorType",
        "values": Array [
          "Fatal",
          "Connection",
        ],
      },
    },
  ],
}
`;
